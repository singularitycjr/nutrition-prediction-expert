server:
  port: 8021

spring:
  profiles:
    active: dev
#  main:
#    lazy-initialization: true  #默认false 关闭懒加载
  application:
    name: food-service
  cloud:
    nacos:
      server-addr: http://111.229.146.107:8848 # nacos地址
  config:
    import:
      - optional:nacos:food-service.yaml # 导入nacos中的配置文件
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${datasource.host}:${datasource.port}/${datasource.database}?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
    username: ${datasource.username}
    password: ${datasource.password}
    type: com.alibaba.druid.pool.DruidDataSource
  data:
    # redis配置
    redis:
      # Redis数据库索引（默认为0）
      database: ${redis.database}
      # Redis服务器地址
      host: ${redis.host}
      # Redis服务器连接端口
      port: ${redis.port}
      # Redis服务器连接密码（默认为空）
      password: ${redis.password}
      # 连接超时时间
      timeout: 10s
      lettuce:
        pool:
          # 连接池最大连接数
          max-active: 10
          # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-wait: -1ms
          # 连接池中的最大空闲连接
          max-idle: 2
          # 连接池中的最小空闲连接
          min-idle: 0

springdoc:
  group-configs:
    - group: 'default'
      paths-to-match: '/**'
      packages-to-scan: com.tongji.service.controller

#sms:
#  app-id: ${sms.app-id}
#  app-secret: ${sms.app-secret}
#  template-id: ${sms.template-id}


############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
#sa-token:
#  # token 名称（同时也是 cookie 名称）
#  token-name: satoken
#  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
#  timeout: 14400
#  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
#  active-timeout: -1
#  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
#  is-concurrent: true
#  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
#  is-share: true
#  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
#  token-style: uuid
#  # 是否输出操作日志
#  is-log: true

#minio:
#  accessKey: ${minio.accessKey}
#  secretKey: ${minio.secretKey}
#  bucket: ${minio.bucket}
#  endpoint: ${minio.endpoint}
#  readPath: ${minio.readPath}

algorithm:
  host: http://100.80.163.197
  create-mask-port: 8998
  use-mask-port: 8997